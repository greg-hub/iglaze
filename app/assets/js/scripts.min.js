/*!
 * iglaze
 * 
 * 
 * @author Greg Clinton
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
$(document).ready(function(){$("#submit_btn").click(function(){var t=!0;$("#contact_form input[required=true], #contact_form textarea[required=true]").each(function(){$(this).css("border-color",""),$.trim($(this).val())||($(this).css("border-color","red"),t=!1);var e=/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;"email"!=$(this).attr("type")||e.test($.trim($(this).val()))||($(this).css("border-color","red"),t=!1)}),t&&(post_data={user_name:$("input[name=name]").val(),user_email:$("input[name=email]").val(),country_code:$("input[name=phone1]").val(),phone_number:$("input[name=phone2]").val(),subject:$("select[name=subject]").val(),msg:$("textarea[name=message]").val()},$.post("contact_me.php",post_data,function(t){"error"==t.type?output='<div class="error">'+t.text+"</div>":(output='<div class="success">'+t.text+"</div>",$("#contact_form  input[required=true], #contact_form textarea[required=true]").val(""),$("#contact_form #contact_body").slideUp()),$("#contact_form #contact_results").hide().html(output).slideDown()},"json"))}),$("#contact_form  input[required=true], #contact_form textarea[required=true]").keyup(function(){$(this).css("border-color",""),$("#contact_results").slideUp()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJjbGljayIsInByb2NlZWQiLCJlYWNoIiwidGhpcyIsImNzcyIsInRyaW0iLCJ2YWwiLCJlbWFpbF9yZWciLCJhdHRyIiwidGVzdCIsInBvc3RfZGF0YSIsInVzZXJfbmFtZSIsInVzZXJfZW1haWwiLCJjb3VudHJ5X2NvZGUiLCJwaG9uZV9udW1iZXIiLCJzdWJqZWN0IiwibXNnIiwicG9zdCIsInJlc3BvbnNlIiwidHlwZSIsIm91dHB1dCIsInRleHQiLCJzbGlkZVVwIiwiaGlkZSIsImh0bWwiLCJzbGlkZURvd24iLCJrZXl1cCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQUEsRUFBQUMsVUFBQUMsTUFBQSxXQUNBRixFQUFBLGVBQUFHLE1BQUEsV0FFQSxHQUFBQyxJQUFBLENBR0FKLEdBQUEsNkVBQUFLLEtBQUEsV0FDQUwsRUFBQU0sTUFBQUMsSUFBQSxlQUFBLElBQ0FQLEVBQUFRLEtBQUFSLEVBQUFNLE1BQUFHLFNBQ0FULEVBQUFNLE1BQUFDLElBQUEsZUFBQSxPQUNBSCxHQUFBLEVBR0EsSUFBQU0sR0FBQSxxQ0FDQSxVQUFBVixFQUFBTSxNQUFBSyxLQUFBLFNBQUFELEVBQUFFLEtBQUFaLEVBQUFRLEtBQUFSLEVBQUFNLE1BQUFHLFVBQ0FULEVBQUFNLE1BQUFDLElBQUEsZUFBQSxPQUNBSCxHQUFBLEtBSUFBLElBR0FTLFdBQ0FDLFVBQUFkLEVBQUEsb0JBQUFTLE1BQ0FNLFdBQUFmLEVBQUEscUJBQUFTLE1BQ0FPLGFBQUFoQixFQUFBLHNCQUFBUyxNQUNBUSxhQUFBakIsRUFBQSxzQkFBQVMsTUFDQVMsUUFBQWxCLEVBQUEsd0JBQUFTLE1BQ0FVLElBQUFuQixFQUFBLDBCQUFBUyxPQUlBVCxFQUFBb0IsS0FBQSxpQkFBQVAsVUFBQSxTQUFBUSxHQUNBLFNBQUFBLEVBQUFDLEtBQ0FDLE9BQUEsc0JBQUFGLEVBQUFHLEtBQUEsVUFFQUQsT0FBQSx3QkFBQUYsRUFBQUcsS0FBQSxTQUVBeEIsRUFBQSw4RUFBQVMsSUFBQSxJQUNBVCxFQUFBLCtCQUFBeUIsV0FFQXpCLEVBQUEsa0NBQUEwQixPQUFBQyxLQUFBSixRQUFBSyxhQUNBLFdBS0E1QixFQUFBLDhFQUFBNkIsTUFBQSxXQUNBN0IsRUFBQU0sTUFBQUMsSUFBQSxlQUFBLElBQ0FQLEVBQUEsb0JBQUF5QiIsImZpbGUiOiJzY3JpcHRzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xyXG4gICAgJChcIiNzdWJtaXRfYnRuXCIpLmNsaWNrKGZ1bmN0aW9uKCkgeyBcclxuICAgICAgIFxyXG4gICAgICAgIHZhciBwcm9jZWVkID0gdHJ1ZTtcclxuICAgICAgICAvL3NpbXBsZSB2YWxpZGF0aW9uIGF0IGNsaWVudCdzIGVuZFxyXG4gICAgICAgIC8vbG9vcCB0aHJvdWdoIGVhY2ggZmllbGQgYW5kIHdlIHNpbXBseSBjaGFuZ2UgYm9yZGVyIGNvbG9yIHRvIHJlZCBmb3IgaW52YWxpZCBmaWVsZHMgICAgICAgXHJcbiAgICAgICAgJChcIiNjb250YWN0X2Zvcm0gaW5wdXRbcmVxdWlyZWQ9dHJ1ZV0sICNjb250YWN0X2Zvcm0gdGV4dGFyZWFbcmVxdWlyZWQ9dHJ1ZV1cIikuZWFjaChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKHRoaXMpLmNzcygnYm9yZGVyLWNvbG9yJywnJyk7IFxyXG4gICAgICAgICAgICBpZighJC50cmltKCQodGhpcykudmFsKCkpKXsgLy9pZiB0aGlzIGZpZWxkIGlzIGVtcHR5IFxyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jc3MoJ2JvcmRlci1jb2xvcicsJ3JlZCcpOyAvL2NoYW5nZSBib3JkZXIgY29sb3IgdG8gcmVkICAgXHJcbiAgICAgICAgICAgICAgICBwcm9jZWVkID0gZmFsc2U7IC8vc2V0IGRvIG5vdCBwcm9jZWVkIGZsYWdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL2NoZWNrIGludmFsaWQgZW1haWxcclxuICAgICAgICAgICAgdmFyIGVtYWlsX3JlZyA9IC9eKFtcXHctXFwuXStAKFtcXHctXStcXC4pK1tcXHctXXsyLDR9KT8kLzsgXHJcbiAgICAgICAgICAgIGlmKCQodGhpcykuYXR0cihcInR5cGVcIik9PVwiZW1haWxcIiAmJiAhZW1haWxfcmVnLnRlc3QoJC50cmltKCQodGhpcykudmFsKCkpKSl7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmNzcygnYm9yZGVyLWNvbG9yJywncmVkJyk7IC8vY2hhbmdlIGJvcmRlciBjb2xvciB0byByZWQgICBcclxuICAgICAgICAgICAgICAgIHByb2NlZWQgPSBmYWxzZTsgLy9zZXQgZG8gbm90IHByb2NlZWQgZmxhZyAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0gICBcclxuICAgICAgICB9KTtcclxuICAgICAgIFxyXG4gICAgICAgIGlmKHByb2NlZWQpIC8vZXZlcnl0aGluZyBsb29rcyBnb29kISBwcm9jZWVkLi4uXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAvL2dldCBpbnB1dCBmaWVsZCB2YWx1ZXMgZGF0YSB0byBiZSBzZW50IHRvIHNlcnZlclxyXG4gICAgICAgICAgICBwb3N0X2RhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICAndXNlcl9uYW1lJyAgICAgOiAkKCdpbnB1dFtuYW1lPW5hbWVdJykudmFsKCksIFxyXG4gICAgICAgICAgICAgICAgJ3VzZXJfZW1haWwnICAgIDogJCgnaW5wdXRbbmFtZT1lbWFpbF0nKS52YWwoKSwgXHJcbiAgICAgICAgICAgICAgICAnY291bnRyeV9jb2RlJyAgOiAkKCdpbnB1dFtuYW1lPXBob25lMV0nKS52YWwoKSwgXHJcbiAgICAgICAgICAgICAgICAncGhvbmVfbnVtYmVyJyAgOiAkKCdpbnB1dFtuYW1lPXBob25lMl0nKS52YWwoKSwgXHJcbiAgICAgICAgICAgICAgICAnc3ViamVjdCcgICAgICAgOiAkKCdzZWxlY3RbbmFtZT1zdWJqZWN0XScpLnZhbCgpLCBcclxuICAgICAgICAgICAgICAgICdtc2cnICAgICAgICAgICA6ICQoJ3RleHRhcmVhW25hbWU9bWVzc2FnZV0nKS52YWwoKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy9BamF4IHBvc3QgZGF0YSB0byBzZXJ2ZXJcclxuICAgICAgICAgICAgJC5wb3N0KCdjb250YWN0X21lLnBocCcsIHBvc3RfZGF0YSwgZnVuY3Rpb24ocmVzcG9uc2UpeyAgXHJcbiAgICAgICAgICAgICAgICBpZihyZXNwb25zZS50eXBlID09ICdlcnJvcicpeyAvL2xvYWQganNvbiBkYXRhIGZyb20gc2VydmVyIGFuZCBvdXRwdXQgbWVzc2FnZSAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0ID0gJzxkaXYgY2xhc3M9XCJlcnJvclwiPicrcmVzcG9uc2UudGV4dCsnPC9kaXY+JztcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIG91dHB1dCA9ICc8ZGl2IGNsYXNzPVwic3VjY2Vzc1wiPicrcmVzcG9uc2UudGV4dCsnPC9kaXY+JztcclxuICAgICAgICAgICAgICAgICAgICAvL3Jlc2V0IHZhbHVlcyBpbiBhbGwgaW5wdXQgZmllbGRzXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNjb250YWN0X2Zvcm0gIGlucHV0W3JlcXVpcmVkPXRydWVdLCAjY29udGFjdF9mb3JtIHRleHRhcmVhW3JlcXVpcmVkPXRydWVdXCIpLnZhbCgnJyk7IFxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjY29udGFjdF9mb3JtICNjb250YWN0X2JvZHlcIikuc2xpZGVVcCgpOyAvL2hpZGUgZm9ybSBhZnRlciBzdWNjZXNzXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAkKFwiI2NvbnRhY3RfZm9ybSAjY29udGFjdF9yZXN1bHRzXCIpLmhpZGUoKS5odG1sKG91dHB1dCkuc2xpZGVEb3duKCk7XHJcbiAgICAgICAgICAgIH0sICdqc29uJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIC8vcmVzZXQgcHJldmlvdXNseSBzZXQgYm9yZGVyIGNvbG9ycyBhbmQgaGlkZSBhbGwgbWVzc2FnZSBvbiAua2V5dXAoKVxyXG4gICAgJChcIiNjb250YWN0X2Zvcm0gIGlucHV0W3JlcXVpcmVkPXRydWVdLCAjY29udGFjdF9mb3JtIHRleHRhcmVhW3JlcXVpcmVkPXRydWVdXCIpLmtleXVwKGZ1bmN0aW9uKCkgeyBcclxuICAgICAgICAkKHRoaXMpLmNzcygnYm9yZGVyLWNvbG9yJywnJyk7IFxyXG4gICAgICAgICQoXCIjY29udGFjdF9yZXN1bHRzXCIpLnNsaWRlVXAoKTtcclxuICAgIH0pO1xyXG59KTtcclxuIl19
